// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * This library provides two services: direct access to the computer's main
 * memory (RAM), and allocation and recycling of memory blocks. The Hack RAM
 * consists of 32,768 words, each holding a 16-bit binary number.
 */ 
class Memory {
    static Array ram;
    static Array heat;
    static int heatStart, heatEnd;

    /** Initializes the class. */
    function void init() {
        let ram = 0;
        let heatStart = 2048;
        let heatEnd = 16384;
        let heat = heatStart;

        let ram[heatStart] = 1;
        let ram[heatStart + 1] = heatEnd - heatStart - 3;
        let ram[heatStart + 2] = 0; 

        return;
    }

    /** Returns the RAM value at the given address. */
    function int peek(int address) {
        return ram[address];
    }

    /** Sets the RAM value at the given address to the given value. */
    function void poke(int address, int value) {
        let ram[address] = value;

        return;
    }

    /** Finds an available RAM block of the given size and returns
     *  a reference to its base address. */
    function int alloc(int size) {
        var int curElem, nextElem;
        let curElem = heatStart;

        while( ~((ram[curElem] = 1) & ~(ram[curElem + 1] < (size + 3))) ){
            let curElem = ram[curElem + 2];
        }

        let ram[curElem] = 0;

        if(ram[curElem + 2] = 0){
            let nextElem = curElem + 3 + size;

            let ram[curElem + 2] = nextElem;

            let ram[nextElem] = 1;
            let ram[nextElem + 2] = 0;

            let ram[nextElem + 1] = ram[curElem + 1] - 3 - size;
            let ram[curElem + 1] = size;
        }

        return curElem + 3;
    }

    /** De-allocates the given object (cast as an array) by making
     *  it available for future allocations. */
    function void deAlloc(Array o) {
        let heat[0] = 1;
        
        return;
    }    
}
